How to build
------------
Tested on Mac OS X 10.8:
- Apple LLVM version 4.2 (clang-425.0.28) (based on LLVM 3.2svn)
- i686-apple-darwin11-llvm-g++-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) 

By default the compiler is clang++. Use the following to specify g++ and custom boost library:

  make CC=g++ CUSTOM_BOOST=1 

Boost and Gtest have been pre-compiled under EWS environement.
Due to there size, it is not included in the handin. Please find them at:

- [boost.zip](https://www.dropbox.com/s/sm6chgwwxdmrtay/boost.zip)
- [gtest-1.6.0.zip](https://www.dropbox.com/s/oc9awprkio3mikp/gtest-1.6.0.zip)

The makefile assumes the custom boost library and gtest are under the project root.  So please extract boost.zip and gtest.zip to the source directory.

How to run
----------
Note that if uses custom build boost library, e.g., in the current directory:

boost/
  include/
  lib/

before executing the binary, please do the following:

  export LD_LIBRARY_PATH=boost/lib:gtest-1.6.0/lib

to let the loader find the custom built boost libraries and google test.

Running the server
------------------

    ./dgrepd

Running the client
------------------
Edit config for the server mappings. The following is an example:

    ./dgrep -t key -p "pattern" machine.1.log machine.2.log machine.3.log

Currently, the server assumes the log file locates at the 'log/run' dir under server running path, i.e., each server sees:

    $SERVER_ROOT/log/run/machine.i.log

where i is the server id. Note that there might be multiple dirs under log/, e.g., log/unittest etc. The purpose is to conveniently symlink different set of logs to log/run such that we can perform different tasks (performance, extra credit, development etc.)

Running the unittest
--------------------
Make sure the servers are up and logs/run links to logs/provided, which contains the files from the course website.
